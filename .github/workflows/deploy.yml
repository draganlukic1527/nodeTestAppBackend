# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js deploy to test environment

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      #         cache: 'npm'

      - name: Installing NPM
        run: npm install

      - run: npm ci
      - run: yarn install
      - run: docker compose stop && docker compose up -d --build

      #     - run: npm run build --if-present     To be done once you have a test suite ready

      - name: Generate deployment package
        run: zip -r deploy.zip * -x "**node_modules**"

      - name: Get timestamp
        uses: gerred/actions/current-time@master
        id: current-time

      - name: Run string replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: "-"
          flags: "g"

      - name: nodeTestAppBackend
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws_access_key: ${{secrets.AWS_PROD_ACCESS_KEY}}
          aws_secret_key: ${{secrets.AWS_PROD_SECRET_KEY}}
          application_name: nodeTestAppBackend
          environment_name: testBackend
          aws-region: us-east-1
          version_label: "app-version-2023-03-15T07-41-21-134Z" #Using timestamp for the versions
          deployment_package: deploy.zip

      - name: Deployed successfully!
        run: echo App deployed to ELB
